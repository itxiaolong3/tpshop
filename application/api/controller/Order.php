<?php
/**
 --------------------------------------------------
 空间类型   用户个人中心控制器
 --------------------------------------------------
 Copyright(c) 2017 时代万网 www.agewnet.com
 --------------------------------------------------
 开发人员: lichao  <729167563@qq.com>
 --------------------------------------------------

 */
namespace app\api\controller;

use app\common\logic\OrderLogic;
use app\common\logic\UsersLogic;
use app\common\model\Order as OrderModel;
use think\Db;
use think\Page;

class Order extends Base{

    protected $order_status_coment;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->order_status_coment = array(
            'WAITPAY' => '待付款 ', //订单查询状态 待支付
            'WAITSEND' => '待发货', //订单查询状态 待发货
            'WAITRECEIVE' => '待收货', //订单查询状态 待收货
            'WAITCCOMMENT' => '待评价', //订单查询状态 待评价
        );
    }

    /**
     * 订单列表
     * @return mixed
     */
    public function order_list()
    {
        $type = input('type');//类型 all 所有订单 order_status_desc waitpay 待支付 waitsend 待发货 WAITCCOMMENT  waitccomment待评价 finish 已完成
       // $type=input('type')?input('type'):'';
       //var_dump(C(strtoupper($type)));die;
        //$this->user_id=207;
        $order = new OrderModel();
        $where_arr = [
            'user_id'=>$this->user_id,
            'deleted'=>0,//删除的订单不列出来
            'order_status'=>["neq", 3],//取消的订单不列出来
            'prom_type'=>['lt',5],//虚拟拼团订单不列出来
        ];
        $count = $order->where($where_arr)
            ->where(function ($query) use ($type) {
                if ($type) {
                    $query->where("1=1".C(strtoupper($type)));
                }
            })
            ->count();
        $Page = new Page($count, 10);
        $order_list = $order->where($where_arr)
            ->where(function ($query) use ($type) {
                if ($type) {
                    $query->where("1=1".C(strtoupper($type)));
                }
            })
            ->limit($Page->firstRow . ',' . $Page->listRows)->order("order_id DESC")->select();
        foreach ($order_list as $k => $v){
            $v["pay_btn"] = $v["pay_btn"];
            $v["receive_btn"] = $v["receive_btn"];
            foreach ($v['order_goods'] as $kk => $vv){
                $v['order_goods'][$kk]['original_img'] = url_add_domain(goods_thum_images($vv['goods']['goods_id'],100,100));
                unset($v['order_goods'][$kk]['goods']);
            }
            $order_list[$k]['order_status_detail'] = $v['order_status_detail'];
            $order_list[$k] = $v;
        }
        return returnOk($order_list);
    }



    /**
     * 订单详情
     * @return mixed
     */
    public function order_detail()
    {
        $id = input('id/d', 0);
        //$this->user_id=207;
        $Order = new OrderModel();
        $order = $Order::get(['order_id' => $id, 'user_id' => $this->user_id]);
        if (!$order) {
            return returnBad("没有获取到订单信息",304);
        }
        foreach ($order['order_goods'] as $k => $v){
            $order['order_goods'][$k]['original_img'] = url_add_domain(goods_thum_images($v['goods']['goods_id'],100,100));
            unset($order['order_goods'][$k]['goods']);
        }

        $order['shipping']= false;
        if($order['shipping_status']){
            $shipping =express_search($id);
            $order['shipping'] = $shipping['data']?$shipping['data'][0]:'暂无物流信息';
        }
        $order["order_status_detail"] = $order["order_status_detail"];
        $order["pay_btn"] = $order["pay_btn"];
        $order["return_btn"] = $order["return_btn"];
        $order["receive_btn"] = $order["receive_btn"];
        $order["comment_btn"] = $order["comment_btn"];
       return returnOk($order);
    }

    /*
     * 物流查询
     *  */
    public function express(){

        $order_id = I('get.order_id/d', 0);
        $order_goods = M('order_goods')->where("order_id", $order_id)->find();
        if(empty($order_goods) || empty($order_id)){
            return returnBad("没有获取到订单信息", 308);
        }
        $data=express_search($order_id);
        $exp['message'] = $data['message'];
        $exp['nu'] = $data['nu'];
        $exp['name'] = $data['name'];

        if(!empty($data['data'])){
            foreach ($data['data'] as $k => $v){
                $exp['data'][$k]['text'] = $v['context'];
                $exp['data'][$k]['desc'] = $v['time'];
            }
        }

        $datas['original_img'] = url_add_domain(goods_thum_images($order_goods['goods_id'],100,100));
        $datas['exp'] = $exp;
        if($exp){
            return returnOk($datas);
        }else {
            return returnBad("获取物流数据失败", 308);
        }
    }

    /**
     * 取消订单
     */
    public function cancel_order()
    {
        //$this->user_id=207;
        $id = I('get.order_id/d');//订单id、
        //检查是否有积分，余额支付
        $logic = new OrderLogic();
        $data = $logic->cancel_order($this->user_id, $id);
        if($data["status"]<0){
            return returnBad($data["msg"], 308);
        }
       return returnOk($data);
    }

    /**
     * 确定收货成功
     */
    public function order_confirm()
    {
        $id = I('order_id/d', 0); //订单id
        $data = confirm_order($id, $this->user_id);
        if ($data['status'] != 1) {
            return json(['code' => 308, 'status' => false, 'data' => $data['msg']]);
        } else {
            $model = new UsersLogic();
            $order_goods = $model->get_order_goods($id);
            return returnOk($order_goods);
        }
    }

    //申请取消订单
    public function record_refund_order()
    {
        $this->user_id=207;
        $order_id   = I('post.order_id', 0);
        $user_note  =  I('post.user_note', '');
        $consignee  =  I('post.consignee', '');
        $mobile     =  I('post.mobile', '');
        $logic = new \app\common\logic\OrderLogic;
        $return = $logic->recordRefundOrder($this->user_id, $order_id, $user_note, $consignee, $mobile);
        //var_dump($return);die;
        // $this->ajaxReturn($return)
        return json($return);
    }

    /**
     * 申请退货
     */
    public function return_goods()
    {
        if(empty($this->user_id)){
            return returnBad('登录超时请重新登录',302);
        }
        $rec_id = I('rec_id',0);
        $return_goods = Db::name('return_goods')->where(array('rec_id'=>$rec_id))->find();
        if(!empty($return_goods))
        {
            return returnBad("已经提交过退货申请", 306);
        }
        $order_goods = Db::name('order_goods')->where(array('rec_id'=>$rec_id))->find();
        $order_goods['original_img'] = url_add_domain(goods_thum_images($order_goods['goods_id'],100,100));
        $order = Db::name('order')->where(array('order_id'=>$order_goods['order_id'],'user_id'=>$this->user_id))->find();
        $auto_service_date = tpCache('shopping.auto_service_date'); //申请售后时间段
        $confirm_time = strtotime("-$auto_service_date day");
        if(empty($order)) return returnBad("非法操作", 306);
        if ($order['add_time'] < $confirm_time) {
            return returnBad("非法操作", 306);
        }

        if(IS_POST)
        {
            $model = new OrderLogic();
            $res = $model->addReturnGoods($rec_id,$order);  //申请售后
            if($res['status']==1) return returnOk($res['msg']);
            return returnBad($res['msg'], 308);
        }
        $region_id[] = tpCache('shop_info.province');
        $region_id[] = tpCache('shop_info.city');
        $region_id[] = tpCache('shop_info.district');
        $region_id[] = 0;
        $return_address = Db::name('region')->where("id in (".implode(',', $region_id).")")->getField('id,name');
        $data = [
            "return_address" => implode(',',$return_address),
            "shop_info_address" => tpCache('shop_info.address'),
            'return_type' => C('RETURN_TYPE'),
            'goods' =>  $order_goods,
            'order' => $order
        ];
        return returnOk($data);
    }



    /**
     * 取消售后服务
     * @author lxl
     * @time 2017-4-19
     */
    public function return_goods_cancel(){
        $id = I('id',0);
        if(empty($id))$this->ajaxReturn(['status'=>-1,'msg'=>'参数错误']);
        $return_goods = M('return_goods')->where(array('id'=>$id,'user_id'=>$this->user_id))->find();
        if(empty($return_goods)) $this->ajaxReturn(['status'=>-1,'msg'=>'参数错误']);
        $res= M('return_goods')->where(array('id'=>$id))->save(array('status'=>-2,'canceltime'=>time()));
        if ($res !== false){
            $this->ajaxReturn(['status'=>1,'msg'=>'取消成功']);
        }else{
            $this->ajaxReturn(['status'=>-1,'msg'=>'取消失败']);
        }
    }
    /**
     *  评论晒单
     * @return mixed
     */
    public function comment()
    {
        $user_id = $this->user_id;
        $status = I('get.status');
        $logic = new CommentLogic;
        $data = $logic->getComment($user_id, $status); //获取评论列表
        $this->assign('page', $data['page']);// 赋值分页输出
        $this->assign('comment_page', $data['page']);
        $this->assign('comment_list', $data['result']);
        $this->assign('active', 'comment');
        if(I('is_ajax')){
            return $this->fetch('ajax_comment_list');
        }
        return $this->fetch();
    }

    /**@time 2019/3/25 改
     *添加评论
     *@author kevin
     */
    public function add_comment()
    {
        $rec_id = I('rec_id/d');
        $this->user['nickname']='张三';
        if(!$rec_id){
            return returnBad("参数错误！",306);
        }
        $order_goods = M('order_goods')->where("rec_id", $rec_id)->find();
        if (IS_POST) {
            // 晒图片
            $logic = new UsersLogic();
            $add['rec_id'] = $rec_id; //订单商品id
            $add['goods_id'] = $order_goods["goods_id"];
            $add['username'] = $this->user['nickname'];
            $add['order_id'] = $order_goods["order_id"];
            $add['goods_rank'] = I('goods_rank');//评分
            $add['is_show'] = 1; //默认显示
            $add['img'] = I('imgs');//图片地址
            $add['content'] = I('content');//评论内容
            $add['add_time'] = time();
            $add['ip_address'] = request()->ip();//请求地址
            $add['user_id'] = $this->user_id;
           //var_dump($add);die;
            //添加评论
            $row = $logic->add_comment($add);
            if ($row['status'] == 1) {
                return returnOk(["msg"=>"评论成功！"]);
            } else {
                return returnBad($row['msg'],308);
            }
        }
        $order_goods['original_img'] = url_add_domain(goods_thum_images($order_goods['goods_id'],100,100));
        //$order_info = Db::name('order')->where("order_id", $order_goods['order_id'])->find();
        return returnOk($order_goods);
    }
    /**
     * @time 2019/3/25
     * @author kevin
     *  评论列表
     *  status    状态 0 未评论 1 已评论 2全部
     */
    public function comment_list()
    {
        $status=I(post.status)? I(post.status):2;
        $comment_list=new UsersLogic();
       $res= $comment_list->get_comment($this->user_id,$status);
        return returnOk($res);
    }

}